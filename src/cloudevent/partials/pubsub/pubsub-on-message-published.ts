import { DeepPartial, MockCloudEventPartials } from '../../types';
import { CloudEvent, CloudFunction, pubsub } from 'firebase-functions/v2';
import { getEventFilters, getEventType, PROJECT_ID } from '../helpers';

export const pubsubOnMessagePublished: MockCloudEventPartials<CloudEvent<
  pubsub.MessagePublishedData
>> = {
  generatePartial(
    cloudFunction: CloudFunction<CloudEvent<pubsub.MessagePublishedData>>
  ): DeepPartial<CloudEvent<pubsub.MessagePublishedData>> {
    const topicId = getEventFilters(cloudFunction)?.topic || '';
    const source = `//pubsub.googleapis.com/projects/${PROJECT_ID}/topics/${topicId}`;
    const subscription = `projects/${PROJECT_ID}/subscriptions/pubsubexample-1`;

    /**
     *  Node: The following is a Base64 string generated by the following:
     *  Buffer.from(dataMessageJson).toString('base64')
     */
    const dataMessageData = 'eyJoZWxsbyI6IndvcmxkIn0=';

    return {
      source,
      data: {
        message: {
          attributes: { 'sample-attribute': 'I am an attribute' },
          data: dataMessageData, // Buffer base64 encoded
          messageId: 'messageId',
          publishTime: new Date().toISOString(),
        },
        subscription,
      },
    };
  },
  match(cloudFunction: CloudFunction<CloudEvent<unknown>>): boolean {
    return (
      getEventType(cloudFunction) ===
      'google.cloud.pubsub.topic.v1.messagePublished'
    );
  },
};
